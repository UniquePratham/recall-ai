# Environment Configuration Template
# Copy this file to .env and fill in your actual values

# Telegram Bot Configuration
BOT_TOKEN=your_telegram_bot_token_here

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# MongoDB Configuration - Choose one:

# OPTION 1: MongoDB Atlas (Cloud/Production) - RECOMMENDED for Railway
# Get your connection string from: https://cloud.mongodb.com
# Format: mongodb+srv://username:password@cluster.mongodb.net/database
MONGODB_URI=mongodb+srv://${DB_USERNAME}:${DB_PASSWORD}@your-cluster.xxxxx.mongodb.net/?retryWrites=true&w=majority

# OPTION 2: Local MongoDB (Development only)
# Uncomment this line and comment the Atlas line above for local development
# MONGODB_URI=mongodb://localhost:27017

# Database name (same for both local and cloud)
DB_NAME=recall_ai

# AI Provider Configuration
# Supported providers: OpenAI | Gemini | Claude | GitHub | Custom
AI_PROVIDER=Gemini
AI_MODEL=gemini-2.5-pro
EMBEDDING_MODEL=text-embedding-004

# Provider-specific API Keys (use only the one for your chosen provider)
OPENAI_API_KEY=your_openai_api_key_here
GEMINI_API_KEY=your_gemini_api_key_here
CLAUDE_API_KEY=your_claude_api_key_here
GITHUB_TOKEN=your_github_token_here

# Custom Provider Configuration (if using Custom provider)
CUSTOM_API_URL=https://your-custom-api.com/v1
CUSTOM_API_KEY=your_custom_api_key_here

# Qdrant Cloud Configuration
QDRANT_URL=https://your-cluster-url.qdrant.tech:6333
QDRANT_API_KEY=your_qdrant_cloud_api_key_here
QDRANT_COLLECTION_NAME=recall_documents
QDRANT_TIMEOUT=30
QDRANT_PREFER_GRPC=false

# Application Configuration
LOG_LEVEL=INFO
MAX_FILE_SIZE_MB=50
MAX_AUDIO_DURATION_MINUTES=10
RATE_LIMIT_REQUESTS_PER_MINUTE=20

# Clean Mode Configuration (prevents clutter folders)
PYTHONDONTWRITEBYTECODE=1    # Prevents __pycache__ folders
DISABLE_FILE_LOGGING=true    # Prevents logs folder
PYTHONUNBUFFERED=1           # Forces stdout/stderr to be unbuffered

# Security Configuration
SECRET_KEY=your_secret_key_here
ALLOWED_FILE_TYPES=pdf,docx,txt,md,ppt,pptx,html,htm,jpg,jpeg,png,mp3,wav,ogg

# Feature Flags
ENABLE_WEB_SCRAPING=true
ENABLE_AUDIO_PROCESSING=true
ENABLE_IMAGE_PROCESSING=true

# --- License / Owner (private instance settings) ---
# This instance can be restricted to a single owner. Set a strong 16-character
# alphanumeric license key and your Telegram numeric user id (not username).
# Only the user with OWNER_TELEGRAM_ID will be allowed to activate and use the bot.
# Example:
# LICENSE_KEY=AB12CD34EF56GH78
# OWNER_TELEGRAM_ID=123456789
LICENSE_KEY=YOUR-16-CHAR-LIC
OWNER_TELEGRAM_ID=0